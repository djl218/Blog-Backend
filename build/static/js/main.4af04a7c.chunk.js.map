{"version":3,"sources":["reducers/successfulNotificationReducer.js","reducers/unsuccessfulNotificationReducer.js","services/blogs.js","reducers/blogReducer.js","reducers/tokenReducer.js","services/login.js","services/users.js","reducers/loginReducer.js","store.js","components/Login.js","components/LoggedInMessage.js","components/Togglable.js","components/NewBlogForm.js","components/SuccessfulNotification.js","components/Blog.js","components/Blogs.js","components/User.js","components/Users.js","components/NewUser.js","components/UnsuccessfulNotification.js","App.js","index.js"],"names":["timerHelper","setSuccessfulNotification","successMessage","dispatch","a","type","data","clearTimeout","setTimeout","successfulNotificationReducer","state","action","setUnsuccessfulNotification","noSuccessMessage","unsuccessfulNotificationReducer","baseUrl","token","setToken","newToken","getAll","axios","get","response","create","newObject","config","headers","Authorization","post","createComment","blogId","user","userComments","comment","commentId","Math","floor","random","toString","concat","put","update","id","likes","deleteBlog","delete","addOneLike","blogService","likedBlog","addComment","comments","blogWithComment","deleteBlogInfoFor","blogReducer","findBlog","find","n","map","blog","returnedBlog","copyBlogs","blogToDelete","confirmWindowForDelete","window","confirm","title","author","filter","tokenReducer","login","credentials","initializeUser","username","password","loginService","userService","users","localStorage","setItem","JSON","stringify","loggedUserJSON","getItem","localStoreUser","parse","createUser","newUserObject","loginReducer","reducer","combineReducers","successfulNotification","unsuccessfulNotification","blogs","store","createStore","composeWithDevTools","applyMiddleware","thunk","Button","styled","button","Input","input","DIV","div","Login","useDispatch","history","useHistory","handleLogin","event","preventDefault","target","value","catch","push","onSubmit","name","LoggedInMessage","onClick","clear","Togglable","React","forwardRef","props","ref","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","buttonLabel","children","displayName","NewBlogForm","blogObject","newTitle","newAuthor","newUrl","url","addedBlog","SuccessfulNotification","notificationStyle","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","marginRight","useSelector","H2","h2","BlogHelper","Blog","match","useRouteMatch","params","handleComment","href","className","undefined","userComment","key","deleteBlogInfo","blogInfoVisible","setBlogInfoVisible","paddingTop","paddingLeft","border","borderColor","borderWidth","to","Blogs","sort","b","UL","ul","UserHelper","User","loggedUsersForBlogListApp","length","TD1","td","TD2","UsersHelper","blogsCreated","textAlign","Users","NewUser","handleNewUser","newName","newUsername","newPassword","UnsuccessfulNotification","H1","h1","H3","h3","Page","Nav","App","loggedUser","useEffect","newBlogFormRef","createRef","noSpace","margin","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4af04a7c.chunk.js","sourcesContent":["var timerHelper\n\nconst successfulNotificationReducer = (state = null, action) => {\n    switch(action.type) {\n        case 'SHOW_SUCCESS_NOTIFICATION': {\n            return action.data.successMessage\n        }\n        case 'HIDE_SUCCESS_NOTIFICATION': {\n            return action.data\n        }\n        default: {\n            return state\n        }\n    }\n}\n\nexport const setSuccessfulNotification = (successMessage) => {\n    return async dispatch => {\n        dispatch({\n            type: 'SHOW_SUCCESS_NOTIFICATION',\n            data: { successMessage }\n        })\n\n        clearTimeout(timerHelper)\n\n        timerHelper = setTimeout(() => {\n            dispatch({\n                type: 'HIDE_SUCCESS_NOTIFICATION',\n                data: null\n            })\n        }, 5000)\n    }\n}\n\nexport default successfulNotificationReducer","var timerHelper\n\nconst unsuccessfulNotificationReducer = (state = null, action) => {\n    switch(action.type) {\n        case 'SHOW_NO_SUCCESS_NOTIFICATION': {\n            return action.data.noSuccessMessage\n        }\n        case 'HIDE_NO_SUCCESS_NOTIFICATION': {\n            return action.data\n        }\n        default: {\n            return state\n        }\n    }\n}\n\nexport const setUnsuccessfulNotification = (noSuccessMessage) => {\n    return async dispatch => {\n        dispatch({\n            type: 'SHOW_NO_SUCCESS_NOTIFICATION',\n            data: { noSuccessMessage }\n        })\n\n        clearTimeout(timerHelper)\n\n        timerHelper = setTimeout(() => {\n            dispatch({\n                type: 'HIDE_NO_SUCCESS_NOTIFICATION',\n                data: null\n            })\n        }, 5000)\n    }\n}\n\nexport default unsuccessfulNotificationReducer","import axios from 'axios'\n\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n  return token\n}\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst createComment = async (blogId, user, userComments, comment) => {\n  const commentId = Math.floor((Math.random() * 100000) + 1).toString()\n  const newObject = {\n    blogId,\n    userComments: userComments.concat({ user, comment, commentId })\n  }\n  const response = await axios.put(`${baseUrl}/${blogId}/comments`, newObject)\n  return response.data\n}\n\nconst update = async (id, likes) => {\n  const newObject = {\n    id,\n    likes: likes + 1,\n  }\n  const response = await axios.put(`${baseUrl}/${id}`, newObject)\n  return response.data\n}\n\nconst deleteBlog = async (id) => {\n  const config = {\n    headers: { Authorization: token }\n  }\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\nexport default { setToken, getAll, create, createComment, update, deleteBlog }","import blogService from '../services/blogs'\n\nimport { setSuccessfulNotification } from './successfulNotificationReducer'\n\nconst blogReducer = (state = [], action) => {\n    switch(action.type) {\n        case 'INIT_BLOGS': {\n            return action.data\n        }\n        case 'LIKE': {\n            const id = action.data.id\n            const findBlog = state.find(n => n.id === id)\n            const likedBlog = {\n                ...findBlog, likes: action.data.likes\n            }\n            return state.map(blog =>\n                blog.id !== id ? blog : likedBlog\n            )\n        }\n        case 'ADD_COMMENT': {\n            const id = action.data.blogId\n            const findBlog = state.find(n => n.id === id)\n            const blogWithComment = {\n                ...findBlog, userComments: action.data.userComments\n            }\n            return state.map(blog =>\n                blog.id !== id ? blog : blogWithComment\n            )\n        }\n        case 'ADD_BLOG': {\n            const returnedBlog = action.data\n            const copyBlogs = [...state]\n            return copyBlogs.concat(returnedBlog)\n        }\n        case 'DELETE': {\n            const id = action.data\n            const copyBlogs = [...state]\n            const blogToDelete = state.find(n => n.id === id)\n            const confirmWindowForDelete = window.confirm(\n                `Remove ${blogToDelete.title} by ${blogToDelete.author}?`\n            )\n            if (confirmWindowForDelete === true) {\n                blogService.deleteBlog(id)\n                return copyBlogs.filter(blog => blog.id !== id)\n            } else {\n                return state\n            }\n        }\n        default: {\n            return state\n        }\n    }\n}\n\nexport const initializeBlogs = () => {\n    return async dispatch => {\n        const blogs = await blogService.getAll()\n        dispatch({\n            type: 'INIT_BLOGS',\n            data: blogs\n        })\n    }\n}\n\nexport const addOneLike = (id, likes) => {\n    return async dispatch => {\n        const likedBlog = await blogService.update(id, likes)\n        dispatch({\n            type: 'LIKE',\n            data: likedBlog\n        })\n    }\n}\n\nexport const addComment = (blogId, user, comments, comment) => {\n    return async dispatch => {\n        const blogWithComment = await blogService.createComment(blogId, user, comments, comment)\n        dispatch({\n            type: 'ADD_COMMENT',\n            data: blogWithComment\n        })\n        dispatch(setSuccessfulNotification('new comment added'))\n    }\n}\n\nexport const addBlog = (blogObject) => {\n    return async dispatch => {\n        const addedBlog = await blogService.create(blogObject)\n        dispatch({\n            type: 'ADD_BLOG',\n            data: addedBlog\n        })\n        dispatch(setSuccessfulNotification(`a new blog ${addedBlog.title} by ${addedBlog.author} added`))\n    }\n}\n\nexport const deleteBlogInfoFor = (id) => {\n    return {\n        type: 'DELETE',\n        data: id\n    }\n}\n\nexport default blogReducer","import blogService from '../services/blogs'\n\nconst tokenReducer = (state = null, action) => {\n    switch(action.type) {\n        case 'INIT_TOKEN': {\n            return action.data\n        }\n        case 'OUT_TOKEN': {\n            return action.data\n        }\n        default: {\n            return state\n        }\n    }\n}\n\nexport const initializeToken = () => {\n    return async dispatch => {\n        const loggedUserJSON = window.localStorage.getItem('loggedBloglistappUser')\n        if (loggedUserJSON) {\n            const user = JSON.parse(loggedUserJSON)\n            const token = await blogService.setToken(user.token)\n            dispatch({\n                type: 'INIT_TOKEN',\n                data: token\n            })\n        }\n    }\n}\n\nexport const tokenRemoval = () => {\n    return async dispatch => {\n        dispatch({\n            type: 'OUT_TOKEN',\n            data: null\n        })\n    }\n}\n\nexport default tokenReducer","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async (credentials) => {\n    const response = await axios.post(baseUrl, credentials)\n    return response.data\n}\n\nexport default { login }","import axios from 'axios'\nconst baseUrl = '/api/users'\n\nconst getAll = async () => {\n    const response = await axios.get(baseUrl)\n    return response.data\n}\n\nconst create = async newObject => {\n    const response = await axios.post(baseUrl, newObject)\n    return response.data\n}\n\nexport default { getAll, create }","import loginService from '../services/login'\nimport blogService from '../services/blogs'\nimport userService from '../services/users'\nimport { setSuccessfulNotification } from './successfulNotificationReducer'\n\nconst loginReducer = (state = null, action) => {\n    switch(action.type) {\n        case 'INIT_USER': {\n            return action.data\n        }\n        case 'LOGOUT': {\n            return action.data\n        }\n        case 'ADD_USER': {\n            return action.data\n        }\n        default: {\n            return state\n        }\n    }\n}\n\nexport const initializeUser = (username, password) => {\n    return async dispatch => {\n        const user = await loginService.login({\n            username, password\n        })\n        const users = await userService.getAll()\n\n        window.localStorage.setItem(\n            'loggedBloglistappUser', JSON.stringify(user)\n        )\n        window.localStorage.setItem(\n            'loggedUsersForBlogListApp', JSON.stringify(users)\n        )\n\n        const loggedUserJSON = window.localStorage.getItem('loggedBloglistappUser')\n        const localStoreUser = JSON.parse(loggedUserJSON)\n        blogService.setToken(user.token)\n        dispatch({\n            type: 'INIT_USER',\n            data: localStoreUser\n        })\n    }\n}\n\nexport const createUser = (newUserObject) => {\n    return async dispatch => {\n        await userService.create(newUserObject)\n        dispatch({\n            type: 'ADD_USER',\n            data: null\n        })\n        dispatch(setSuccessfulNotification('account created, please login'))\n    }\n}\n\nexport const initializeLogout = () => {\n    return async dispatch => {\n        dispatch({\n            type: 'LOGOUT',\n            data: null\n        })\n    }\n}\n\nexport default loginReducer","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport successfulNotificationReducer from './reducers/successfulNotificationReducer'\nimport unsuccessfulNotificationReducer from './reducers/unsuccessfulNotificationReducer'\nimport blogReducer from './reducers/blogReducer'\nimport tokenReducer from './reducers/tokenReducer'\nimport loginReducer from './reducers/loginReducer'\n\nconst reducer = combineReducers({\n    successfulNotification: successfulNotificationReducer,\n    unsuccessfulNotification: unsuccessfulNotificationReducer,\n    blogs: blogReducer,\n    token: tokenReducer,\n    login: loginReducer\n})\n\nconst store = createStore(\n    reducer,\n    composeWithDevTools(\n        applyMiddleware(thunk)\n    )\n)\n\nexport default store","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\n\nimport { initializeUser } from '../reducers/loginReducer'\nimport { setUnsuccessfulNotification } from '../reducers/unsuccessfulNotificationReducer'\n\nimport styled from 'styled-components'\n\nconst Button = styled.button`\n  color: Magenta;\n  background: Gold;\n  font-size: 1em;\n  margin: 0.5em;\n  padding: 0.25em 1em;\n  border: 2px solid PaleVioletRed;\n  border-radius: 3px;\n`\nconst Input = styled.input`\n  padding: 0.5em;\n  margin: 0.5em;\n  color: Cyan;\n  background: Indigo;\n  border: none;\n  border-radius: 3px;\n`\nconst DIV = styled.div`\n  font-size: 1.1em;\n  text-align: left;\n  color: OrangeRed;\n`\n\nconst Login = () => {\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    const handleLogin = async (event) => {\n        event.preventDefault()\n        const username = event.target.username.value\n        const password = event.target.password.value\n\n        dispatch(initializeUser(username, password))\n        .catch(() => dispatch(setUnsuccessfulNotification('wrong username or password')))\n\n        event.target.username.value = ''\n        event.target.password.value = ''\n        history.push('/')\n    }\n\n    return (\n        <div>\n            <form onSubmit={handleLogin}>\n                <DIV>\n                    username\n                    <Input name=\"username\" />\n                </DIV>\n                <DIV>\n                    password\n                    <Input type=\"password\" name=\"password\" />\n                </DIV>\n                <Button id=\"login-button\" type=\"submit\">login</Button>\n            </form>\n        </div>\n    )\n}\n\nexport default Login","import React from 'react'\nimport { useDispatch } from 'react-redux'\n\nimport { initializeLogout } from '../reducers/loginReducer'\nimport { tokenRemoval } from '../reducers/tokenReducer'\n\nimport styled from 'styled-components'\n\nconst Button = styled.button`\n    color: Magenta;\n    background: Gold;\n    font-size: 1em;\n    margin: 0.5em;\n    padding: 0.25em 1em;\n    border: 2px solid PaleVioletRed;\n    border-radius: 3px;\n`\n\nconst LoggedInMessage = () => {\n    const dispatch = useDispatch()\n\n    const loggedUserJSON = window.localStorage.getItem('loggedBloglistappUser')\n    const user = JSON.parse(loggedUserJSON)\n\n    const logout = () => {\n        window.localStorage.clear()\n        dispatch(initializeLogout())\n        dispatch(tokenRemoval())\n    }\n\n    if (user !== null) {\n        return (\n            <>\n                {user.name} logged in\n                <Button id='logoutButton' onClick={logout}>logout</Button>\n            </>\n        )\n    } else {\n        return null\n    }\n}\n\nexport default LoggedInMessage","import React, { useState, useImperativeHandle } from 'react'\nimport PropTypes from 'prop-types'\n\nimport styled from 'styled-components'\n\nconst Button = styled.button`\n    color: Magenta;\n    background: Gold;\n    font-size: 1em;\n    padding: 0.25em 1em;\n    border: 2px solid PaleVioletRed;\n    border-radius: 3px;\n`\n\nconst Togglable = React.forwardRef((props, ref) => {\n    const [visible, setVisible] = useState(false)\n\n    const hideWhenVisible = { display: visible ? 'none' : '' }\n    const showWhenVisible = { display: visible ? '' : 'none' }\n\n    const toggleVisibility = () => {\n        setVisible(!visible)\n    }\n\n    useImperativeHandle(ref, () => {\n        return {\n            toggleVisibility\n        }\n    })\n\n    return (\n        <div>\n            <div style={hideWhenVisible}>\n                <Button onClick={toggleVisibility}>{props.buttonLabel}</Button>\n            </div>\n            <div style={showWhenVisible}>\n                {props.children}\n                <Button onClick={toggleVisibility}>cancel</Button>\n            </div>\n        </div>\n    )\n})\n\nTogglable.displayName = 'Togglable'\nTogglable.propTypes = {\n    buttonLabel: PropTypes.string.isRequired\n}\n\nexport default Togglable","import React from 'react'\nimport { useDispatch } from 'react-redux'\n\nimport { addBlog } from '../reducers/blogReducer'\n\nimport styled from 'styled-components'\n\nconst Button = styled.button`\n  color: Magenta;\n  background: Gold;\n  font-size: 1em;\n  padding: 0.25em 1em;\n  border: 2px solid PaleVioletRed;\n  border-radius: 3px;\n`\nconst Input = styled.input`\n  padding: 0.5em;\n  margin: 0.5em;\n  color: Cyan;\n  background: Indigo;\n  border: none;\n  border-radius: 3px;\n`\nconst DIV = styled.div`\n  font-size: 1.1em;\n  text-align: left;\n  color: OrangeRed;\n`\n\nconst NewBlogForm = () => {\n    const dispatch = useDispatch()\n\n    const addBlogToList = (event) => {\n        event.preventDefault()\n        const newTitle = event.target.newTitle.value\n        const newAuthor = event.target.newAuthor.value\n        const newUrl = event.target.newUrl.value\n\n        dispatch(addBlog({\n          title: newTitle,\n          author: newAuthor,\n          url: newUrl\n        }))\n\n        event.target.newTitle.value = ''\n        event.target.newAuthor.value = ''\n        event.target.newUrl.value = ''\n    }\n    return(\n        <form onSubmit={addBlogToList}>\n        <DIV>\n            title: <Input name=\"newTitle\" />\n        </DIV>\n        <DIV>\n            author: <Input name=\"newAuthor\" />\n        </DIV>\n        <DIV>\n            url: <Input name=\"newUrl\" />\n        </DIV>\n        <div>\n            <Button id='createButton' type=\"submit\">create</Button>\n        </div>\n        </form>\n    )\n}\n\nexport default NewBlogForm","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nconst SuccessfulNotification = () => {\n    const notificationStyle = {\n        color: 'green',\n        background: 'lightgrey',\n        fontSize: 20,\n        borderStyle: 'solid',\n        borderRadius: 5,\n        padding: 10,\n        marginBottom: 10,\n        marginRight: 300\n    }\n\n    const successfulNotification = useSelector(({ successfulNotification }) => {\n        if (successfulNotification === null) {\n            return null\n        }\n        return (\n            <div style={notificationStyle}>\n                {successfulNotification}\n            </div>\n        )\n    })\n\n    return successfulNotification\n}\n\nexport default SuccessfulNotification","import React from 'react'\nimport SuccessfulNotification from './SuccessfulNotification'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useRouteMatch, useHistory } from 'react-router-dom'\nimport { addOneLike, deleteBlogInfoFor, addComment } from '../reducers/blogReducer'\n\nimport styled from 'styled-components'\n\nconst Button = styled.button`\n  color: Magenta;\n  background: Gold;\n  font-size: 1em;\n  margin: 0.5em;\n  padding: 0.25em 1em;\n  border: 2px solid PaleVioletRed;\n  border-radius: 3px;\n`\nconst Input = styled.input`\n  padding: 0.5em;\n  color: Cyan;\n  background: Indigo;\n  border: none;\n  border-radius: 3px;\n`\nconst H2 = styled.h2`\n  font-size: 1.5em;\n  text-align: left;\n  color: FireBrick;\n`\nconst DIV = styled.div`\n  font-size: 1.1em;\n  text-align: left;\n  color: OrangeRed;\n`\n\nconst BlogHelper = ({ comment, user }) => {\n    return (\n        <li>{comment} - {user}</li>\n    )\n}\n\nconst Blog = () => {\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    const blogs = useSelector(state => state.blogs)\n    const copyBlogs = [...blogs]\n\n    const match = useRouteMatch('/blogs/:id')\n    const blog = match\n        ? copyBlogs.find(user => user.id === match.params.id)\n        : null\n\n    const loggedUserJSON = window.localStorage.getItem('loggedBloglistappUser')\n    const user = JSON.parse(loggedUserJSON)\n\n    const deleteBlog = (id) => {\n        dispatch(deleteBlogInfoFor(id))\n        history.push('/')\n    }\n\n    const handleComment = async (event) => {\n        event.preventDefault()\n        const comment = event.target.comment.value\n\n        dispatch(addComment(\n            blog.id,\n            user.name,\n            blog.userComments,\n            comment\n        ))\n\n        event.target.comment.value = ''\n    }\n\n    if (!blog) {\n        return null\n    } else {\n        return (\n            <div>\n                <div>\n                <SuccessfulNotification />\n                    <H2>\n                        {blog.title} by {blog.author}\n                    </H2>\n                    <div>\n                        <a href={blog.url}>{blog.url}</a>\n                    </div>\n                </div>\n                <DIV className=\"numberOfLikes\">\n                    {blog.likes} likes\n                    <Button id='likeButton' onClick={() => dispatch(addOneLike(blog.id, blog.likes))}>like</Button>\n                </DIV>\n                <DIV>\n                    added by {blog.user.name}\n                </DIV>\n                <div>\n                    {\n                        user.username === blog.user.username\n                        ? <Button id='deleteButton' onClick={() => deleteBlog(blog.id)}>remove</Button>\n                        : null\n                    }\n                </div>\n                <div>\n                    <H2><b>comments</b></H2>\n                    <form onSubmit={handleComment}>\n                        <div>\n                            <Input name=\"comment\" />\n                            <Button id=\"comment-button\" type=\"submit\">add comment</Button>\n                        </div>\n                        <DIV>\n                            <ul>\n                                {\n                                    blog.userComments === undefined\n                                    ? null\n                                    : blog.userComments\n                                        .map(userComment =>\n                                            <BlogHelper\n                                                key={userComment.commentId}\n                                                comment={userComment.comment}\n                                                user={userComment.user}\n                                            />\n                                        )\n                                }\n                            </ul>\n                        </DIV>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Blog","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { addOneLike, deleteBlogInfoFor } from '../reducers/blogReducer'\n\nimport styled from 'styled-components'\n\nconst Button = styled.button`\n  color: Magenta;\n  background: Gold;\n  font-size: 1em;\n  margin: 0.5em;\n  padding: 0.25em 1em;\n  border: 2px solid PaleVioletRed;\n  border-radius: 3px;\n`\nconst DIV = styled.div`\n  font-size: 1.1em;\n  text-align: left;\n  color: OrangeRed;\n`\n\nconst Blog = ({ user, blog, addOneLike, deleteBlogInfo }) => {\n    const [blogInfoVisible, setBlogInfoVisible] = useState(false)\n\n    const blogStyle = {\n      paddingTop: 10,\n      paddingLeft: 2,\n      border: 'solid',\n      borderColor: 'magenta',\n      borderWidth: 3,\n      marginBottom: 5,\n      marginRight: 300\n    }\n\n    const hideWhenVisible = { display: blogInfoVisible ? 'none' : '' }\n    const showWhenVisible = { display: blogInfoVisible ? '' : 'none' }\n\n    return (\n      <div style={blogStyle}>\n        <div style={hideWhenVisible} className=\"defaultBlogDisplay\">\n          <Link to={`/blogs/${blog.id}`}>{blog.title} by {blog.author}</Link>\n          <Button id='viewButton' onClick={() => setBlogInfoVisible(true)}>view</Button>\n        </div>\n        <div style={showWhenVisible} className=\"blogDisplayAfterClick\">\n          <div>\n            <Link to={`/blogs/${blog.id}`}>{blog.title} by {blog.author}</Link>\n            <Button onClick={() => setBlogInfoVisible(false)}>hide</Button>\n          </div>\n          <div>\n          <a href={blog.url}>{blog.url}</a>\n          </div>\n          <DIV className=\"numberOfLikes\">\n            {blog.likes} likes\n            <Button id='likeButton' onClick={addOneLike}>like</Button>\n          </DIV>\n          <DIV>\n            added by {blog.user.name}\n          </DIV>\n          <div>\n            {\n              user.username === blog.user.username\n              ? <Button id='deleteButton' onClick={deleteBlogInfo}>remove</Button>\n              : null\n            }\n          </div>\n        </div>\n      </div>\n    )\n}\n\nconst Blogs = () => {\n    const dispatch = useDispatch()\n\n    const blogs = useSelector(state => state.blogs)\n    const copyBlogs = [...blogs]\n\n    const loggedUserJSON = window.localStorage.getItem('loggedBloglistappUser')\n    const user = JSON.parse(loggedUserJSON)\n\n    return(\n        <div>\n          {copyBlogs\n            .sort((a, b) => b.likes - a.likes)\n            .map(blog =>\n            <Blog\n              user={user}\n              key={blog.id}\n              blog={blog}\n              addOneLike={() => dispatch(addOneLike(blog.id, blog.likes))}\n              deleteBlogInfo={() => dispatch(deleteBlogInfoFor(blog.id))}\n            />\n          )}\n        </div>\n    )\n}\n\nexport default Blogs","import React from 'react'\nimport { useRouteMatch } from 'react-router-dom'\n\nimport styled from 'styled-components'\n\nconst H2 = styled.h2`\n    font-size: 1.5em;\n    text-align: left;\n    color: FireBrick;\n`\nconst UL = styled.ul`\n    font-size: 1.2em;\n    text-align: left;\n    color: OrangeRed;\n`\n\nconst UserHelper = ({ blog }) => {\n    return (\n        <li>{blog}</li>\n    )\n}\n\nconst User = () => {\n    const loggedUsersForBlogListApp = window.localStorage.getItem('loggedUsersForBlogListApp')\n    const users = JSON.parse(loggedUsersForBlogListApp)\n\n    const match = useRouteMatch('/users/:id')\n    const user = match\n        ? users.find(user => user.id === match.params.id)\n        : null\n\n    if (user.blogs.length === 0) {\n        return (\n            <H2>no blogs added by user</H2>\n        )\n    } else {\n        return (\n            <div>\n                <H2>{user.name}</H2>\n                <H2>added blogs</H2>\n                <UL>\n                    {user.blogs\n                        .map(blog =>\n                            <UserHelper\n                                key={blog.id}\n                                blog={blog.title}\n                            />\n                        )\n                    }\n                </UL>\n            </div>\n        )\n    }\n}\n\nexport default User","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport styled from 'styled-components'\n\nconst TD1 = styled.td`\n    font-size: 1.2em;\n    text-align: left;\n    color: Magenta;\n`\nconst TD2 = styled.td`\n    font-size: 1.2em;\n    text-align: left;\n    color: OrangeRed;\n`\n\nconst UsersHelper = ({ user, name, blogsCreated }) => {\n    return (\n        <tr>\n            <td key={user.id} style={{ textAlign:'left' }}>\n                <Link to={`/users/${user.id}`}>{name}</Link>\n            </td>\n            <TD2 style={{ textAlign:'right' }}>{blogsCreated}</TD2>\n        </tr>\n    )\n}\n\nconst Users = () => {\n    const loggedUsersForBlogListApp = window.localStorage.getItem('loggedUsersForBlogListApp')\n    const users = JSON.parse(loggedUsersForBlogListApp)\n\n    return (\n        <table>\n            <thead>\n                <tr>\n                    <td style={{ textAlign:'right' }}>&nbsp;</td>\n                    <TD1 style={{ textAlign:'right' }}><b>blogs created</b></TD1>\n                </tr>\n            </thead>\n            <tbody>\n                {users\n                    .map(user =>\n                    <UsersHelper\n                        key={user.id}\n                        user={user}\n                        name={user.name}\n                        blogsCreated={user.blogs.length}\n                    />\n                )}\n            </tbody>\n        </table>\n    )\n}\n\nexport default Users","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\n\nimport { createUser } from '../reducers/loginReducer'\nimport { setUnsuccessfulNotification } from '../reducers/unsuccessfulNotificationReducer'\n\nimport styled from 'styled-components'\n\nconst Button = styled.button`\n  color: Magenta;\n  background: Gold;\n  font-size: 1em;\n  margin: 0.5em;\n  padding: 0.25em 1em;\n  border: 2px solid PaleVioletRed;\n  border-radius: 3px;\n`\nconst Input = styled.input`\n  padding: 0.5em;\n  margin: 0.5em;\n  color: Cyan;\n  background: Indigo;\n  border: none;\n  border-radius: 3px;\n`\nconst DIV = styled.div`\n  font-size: 1.1em;\n  text-align: left;\n  color: OrangeRed;\n`\n\nconst NewUser = () => {\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    const handleNewUser = async (event) => {\n        event.preventDefault()\n        const newName = event.target.name.value\n        const newUsername = event.target.username.value\n        const newPassword = event.target.password.value\n\n        dispatch(createUser({\n            name: newName,\n            username: newUsername,\n            password: newPassword\n        }))\n        .catch(() => dispatch(setUnsuccessfulNotification('username and password each need to be at least three characters')))\n\n        event.target.name.value = ''\n        event.target.username.value = ''\n        event.target.password.value = ''\n        history.push('/')\n    }\n\n    return (\n        <div>\n            <form onSubmit={handleNewUser}>\n                <DIV>\n                    name\n                    <Input name=\"name\" />\n                </DIV>\n                <DIV>\n                    username\n                    <Input name=\"username\" />\n                </DIV>\n                <DIV>\n                    password\n                    <Input name=\"password\" />\n                </DIV>\n                <Button type=\"submit\">create account</Button>\n            </form>\n        </div>\n    )\n}\n\nexport default NewUser","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nconst UnsuccessfulNotification = () => {\n    const notificationStyle = {\n        color: 'red',\n        background: 'lightgrey',\n        fontSize: 20,\n        borderStyle: 'solid',\n        borderRadius: 5,\n        padding: 10,\n        marginBottom: 10,\n        marginRight: 300\n    }\n\n    const unsuccessfulNotification = useSelector(({ unsuccessfulNotification }) => {\n        if (unsuccessfulNotification === null) {\n            return null\n        }\n        return (\n            <div className=\"error\" style={notificationStyle}>\n                {unsuccessfulNotification}\n            </div>\n        )\n    })\n\n    return unsuccessfulNotification\n}\n\nexport default UnsuccessfulNotification","import React, { useEffect } from 'react'\nimport Login from './components/Login'\nimport LoggedInMessage from './components/LoggedInMessage'\nimport Togglable from './components/Togglable'\nimport NewBlogForm from './components/NewBlogForm'\nimport Blog from './components/Blog'\nimport Blogs from './components/Blogs'\nimport User from './components/User'\nimport Users from './components/Users'\nimport NewUser from './components/NewUser'\nimport SuccessfulNotification from './components/SuccessfulNotification'\nimport UnsuccessfuNotification from './components/UnsuccessfulNotification'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { initializeToken } from './reducers/tokenReducer'\nimport { initializeBlogs } from './reducers/blogReducer'\n\nimport {\n  Switch,\n  Route,\n  Link\n} from 'react-router-dom'\n\nimport styled from 'styled-components'\n\nconst H1 = styled.h1`\n  font-size: 2.5em;\n  text-align: center;\n  color: Navy;\n`\nconst H2 = styled.h2`\n  font-size: 1.5em;\n  text-align: left;\n  color: FireBrick;\n`\nconst H3 = styled.h3`\n  font-size: 1.1em;\n  text-align: left;\n  color: FireBrick;\n`\nconst Page = styled.div`\n  padding: 4em;\n  width: 100vw;\n  height: 100vh;\n  background: Thistle;\n`\nconst Nav = styled.div`\n  padding: 1em;\n  background: SpringGreen;\n  position: absolute;\n  top: 8px;\n  left: 8px;\n  right: -150px;\n`\n\nconst App = () => {\n  const dispatch = useDispatch()\n  const loggedUser = useSelector(state => state.login)\n  const token = useSelector(state => state.token)\n\n  useEffect(() => {\n    dispatch(initializeToken())\n    dispatch(initializeBlogs())\n  }, [dispatch])\n\n  const newBlogFormRef = React.createRef()\n\n  const padding = {\n    padding: 5\n  }\n\n  const noSpace = {\n    margin: 0,\n    padding: 0\n  }\n\n  if (!loggedUser && !token) {\n    return (\n      <Page>\n        <H1>blog app</H1>\n        <SuccessfulNotification />\n        <UnsuccessfuNotification />\n        <H2>Log in to application</H2>\n        <Login />\n        <br></br>\n        <br></br>\n        <br></br>\n        <H2 style={noSpace}>Not a user?</H2>\n        <H3 style={noSpace}>Create an account here</H3>\n        <NewUser />\n      </Page>\n    )\n  } else {\n    return (\n      <Page>\n        <Nav>\n          <Link style={padding} to=\"/\">blogs</Link>\n          <Link style={padding} to=\"/users\">users</Link>\n          <LoggedInMessage />\n        </Nav>\n\n        <Switch>\n          <Route path=\"/users/:id\">\n            <H1>blog app</H1>\n            <User />\n          </Route>\n          <Route path=\"/users\">\n            <H1>blog app</H1>\n            <H2>Users</H2>\n            <Users />\n          </Route>\n          <Route path=\"/blogs/:id\">\n            <H1>blog app</H1>\n            <Blog />\n          </Route>\n          <Route path=\"/\">\n            <H1>blog app</H1>\n            <SuccessfulNotification />\n            <Togglable buttonLabel='new blog' ref={newBlogFormRef}>\n              <NewBlogForm />\n            </Togglable>\n            <Blogs />\n          </Route>\n        </Switch>\n      </Page>\n    )\n  }\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport App from './App'\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <App />\n        </Router>\n    </Provider>,\n    document.getElementById('root')\n)"],"sourceRoot":""}